# config/.env.example - 分离式AI服务配置版本

# ==========================================
# データベース設定
# ==========================================
DB_HOST=localhost
DB_PORT=5432
DB_NAME=ai_matching
DB_USER=postgres
DB_PASSWORD=your_password_here
DB_POOL_MIN=10
DB_POOL_MAX=20

# ==========================================
# OpenAI設定
# ==========================================
OPENAI_API_KEY=your_openai_api_key_here
OPENAI_MODEL_CLASSIFY=gpt-3.5-turbo
OPENAI_MODEL_EXTRACT=gpt-4
OPENAI_TEMPERATURE=0.1
OPENAI_MAX_TOKENS=300
OPENAI_TIMEOUT=60.0

# ==========================================
# DeepSeek設定
# ==========================================
DEEPSEEK_API_KEY=your_deepseek_api_key_here
DEEPSEEK_API_BASE_URL=https://api.deepseek.com
DEEPSEEK_MODEL_CLASSIFY=deepseek-chat
DEEPSEEK_MODEL_EXTRACT=deepseek-chat
DEEPSEEK_TEMPERATURE=0.1
DEEPSEEK_MAX_TOKENS=300
DEEPSEEK_TIMEOUT=120.0

# ==========================================
# 认证自定义API设置
# ==========================================
CUSTOM_API_KEY=your_custom_api_key_here
CUSTOM_API_BASE_URL=https://your-api-endpoint.com
CUSTOM_MODEL_CLASSIFY=your-model-name
CUSTOM_MODEL_EXTRACT=your-model-name
CUSTOM_REQUIRE_AUTH=true
CUSTOM_DEFAULT_MODEL=default
CUSTOM_TEMPERATURE=0.1
CUSTOM_MAX_TOKENS=300
CUSTOM_TIMEOUT=120.0

# ==========================================
# 无认证自定义API设置 (新增)
# ==========================================
CUSTOM_NO_AUTH_API_BASE_URL=http://localhost:8000
CUSTOM_NO_AUTH_DEFAULT_MODEL=default
CUSTOM_NO_AUTH_TEMPERATURE=0.1
CUSTOM_NO_AUTH_MAX_TOKENS=300
CUSTOM_NO_AUTH_TIMEOUT=120.0

# ==========================================
# 🔥 分离式AI服务配置 (核心新功能)
# ==========================================

# 邮件分类服务配置
AI_CLASSIFICATION_PROVIDER=custom_no_auth
AI_CLASSIFICATION_FALLBACK=deepseek

# 数据提取服务配置  
AI_EXTRACTION_PROVIDER=deepseek
AI_EXTRACTION_FALLBACK=openai

# 附件处理服务配置
AI_ATTACHMENT_PROVIDER=deepseek
AI_ATTACHMENT_FALLBACK=openai

# ==========================================
# 传统单一AI提供商配置 (向后兼容)
# ==========================================
DEFAULT_AI_PROVIDER=deepseek

# ==========================================
# メール処理設定
# ==========================================
EMAIL_BATCH_SIZE=50
EMAIL_CHECK_INTERVAL=10
EMAIL_RETRY_ATTEMPTS=3
EMAIL_RETRY_DELAY=60

# ==========================================
# 改进邮件分类器配置
# ==========================================

# 分类置信度阈值 (0.0-1.0)
CLASSIFICATION_CONFIDENCE_THRESHOLD=0.7

# 是否启用详细分类日志 (true/false)
ENABLE_CLASSIFICATION_LOGGING=true

# 是否启用关键词分析 (true/false)
KEYWORD_ANALYSIS_ENABLED=true

# 分类器超时时间（秒）
CLASSIFICATION_TIMEOUT=30

# 垃圾邮件关键词检测阈值
SPAM_KEYWORDS_THRESHOLD=2

# 关键词权重配置
KEYWORD_WEIGHT_HIGH=3.0
KEYWORD_WEIGHT_MEDIUM=1.5
KEYWORD_WEIGHT_LOW=0.5

# 内容提取配置
CONTENT_MAX_LENGTH=2000
CONTENT_HEAD_LENGTH=800
CONTENT_TAIL_LENGTH=300
IMPORTANT_KEYWORDS_THRESHOLD=2

# ==========================================
# ロギング設定
# ==========================================
LOG_LEVEL=INFO
LOG_FILE=email_processor.log

# ==========================================
# セキュリティ設定
# ==========================================
ENCRYPTION_KEY=your_encryption_key_here

# ==========================================
# 分离式AI配置说明 🚀
# ==========================================

# 🎯 分离式AI服务配置的核心思想：
# 不同的AI任务可以使用不同的AI提供商，实现最优的成本效益和性能组合

# 📋 AI_CLASSIFICATION_PROVIDER: 邮件分类服务
#   - custom_no_auth: 使用你自己的无认证API (推荐用于分类)
#   - deepseek: 使用DeepSeek API (高性价比)
#   - openai: 使用OpenAI API (高精度但费用较高)
#   - custom: 使用需要认证的自定义API

# 📊 AI_EXTRACTION_PROVIDER: 数据提取服务
#   - deepseek: 推荐用于数据提取，性价比高
#   - openai: 精度最高，适合复杂提取任务
#   - custom_no_auth: 你的自定义API
#   - custom: 需要认证的自定义API

# 📎 AI_ATTACHMENT_PROVIDER: 附件处理服务
#   - deepseek: 推荐，擅长文档理解
#   - openai: 最佳精度，处理复杂简历
#   - custom_no_auth: 你的自定义API

# 🔄 Fallback机制: 当主要提供商失败时自动切换到备用提供商
#   - AI_CLASSIFICATION_FALLBACK: 分类服务备用提供商
#   - AI_EXTRACTION_FALLBACK: 提取服务备用提供商
#   - AI_ATTACHMENT_FALLBACK: 附件处理备用提供商

# ==========================================
# 推荐配置方案 💡
# ==========================================

# 🏆 方案1: 成本优化型
# AI_CLASSIFICATION_PROVIDER=custom_no_auth    # 你的免费API用于分类
# AI_EXTRACTION_PROVIDER=deepseek              # DeepSeek性价比高
# AI_ATTACHMENT_PROVIDER=deepseek              # DeepSeek处理文档能力强
# AI_CLASSIFICATION_FALLBACK=deepseek
# AI_EXTRACTION_FALLBACK=deepseek
# AI_ATTACHMENT_FALLBACK=deepseek

# 🎯 方案2: 精度优先型
# AI_CLASSIFICATION_PROVIDER=custom_no_auth    # 你的API用于分类
# AI_EXTRACTION_PROVIDER=openai                # OpenAI用于精确提取
# AI_ATTACHMENT_PROVIDER=openai                # OpenAI处理复杂简历
# AI_CLASSIFICATION_FALLBACK=openai
# AI_EXTRACTION_FALLBACK=deepseek
# AI_ATTACHMENT_FALLBACK=deepseek

# ⚖️ 方案3: 平衡型 (推荐)
# AI_CLASSIFICATION_PROVIDER=custom_no_auth    # 你的API用于分类
# AI_EXTRACTION_PROVIDER=deepseek              # DeepSeek用于提取
# AI_ATTACHMENT_PROVIDER=deepseek              # DeepSeek处理附件
# AI_CLASSIFICATION_FALLBACK=deepseek          # DeepSeek作为备用
# AI_EXTRACTION_FALLBACK=openai                # OpenAI作为高精度备用
# AI_ATTACHMENT_FALLBACK=openai                # OpenAI作为高精度备用

# 🔧 方案4: 全自定义型
# AI_CLASSIFICATION_PROVIDER=custom_no_auth    # 你的分类API
# AI_EXTRACTION_PROVIDER=custom_no_auth        # 你的提取API
# AI_ATTACHMENT_PROVIDER=custom_no_auth        # 你的附件API
# AI_CLASSIFICATION_FALLBACK=deepseek
# AI_EXTRACTION_FALLBACK=deepseek
# AI_ATTACHMENT_FALLBACK=deepseek

# ==========================================
# 配置验证和调试 🔍
# ==========================================

# 运行配置验证:
# python src/config.py

# 这将输出：
# - 当前分离式AI服务配置
# - 每个服务使用的AI提供商
# - 配置验证结果
# - 详细的服务映射信息

# ==========================================
# 性能调优建议 ⚡
# ==========================================

# 对于高并发场景：
# - 降低 CLASSIFICATION_TIMEOUT 到 20-25 秒
# - 增加 DB_POOL_MAX 到 30-50
# - 使用你的自定义API作为主要分类器以减少外部依赖

# 对于高准确率要求：
# - 提高 CLASSIFICATION_CONFIDENCE_THRESHOLD 到 0.8
# - 启用 KEYWORD_ANALYSIS_ENABLED=true
# - 使用 OpenAI 作为数据提取的主要或备用提供商

# 对于低延迟要求：
# - 优先使用你的 custom_no_auth API
# - 降低各个超时时间设置
# - 设置更短的模型token限制

# ==========================================
# 故障排除 🚨
# ==========================================

# 如果分类不准确：
# 1. 检查 AI_CLASSIFICATION_PROVIDER 的API连接
# 2. 调整 CLASSIFICATION_CONFIDENCE_THRESHOLD
# 3. 启用 ENABLE_CLASSIFICATION_LOGGING=true 查看详细日志
# 4. 确保fallback提供商配置正确

# 如果数据提取失败：
# 1. 检查 AI_EXTRACTION_PROVIDER 的API配置
# 2. 确认API有足够的token限制
# 3. 检查网络连接和超时设置
# 4. 验证fallback提供商是否可用

# 如果附件处理失败：
# 1. 检查文件格式支持
# 2. 确认 AI_ATTACHMENT_PROVIDER 的配置
# 3. 检查文件大小限制
# 4. 验证PDF/Word/Excel处理库安装

# ==========================================
# 迁移指南 📋
# ==========================================

# 从原有单一AI配置迁移到分离式配置：
# 1. 保留原有的所有AI提供商配置
# 2. 添加新的分离式服务配置变量
# 3. 设置合适的主要和备用提供商
# 4. 逐步测试每个服务的配置
# 5. 根据实际效果调整配置

# 向后兼容性：
# - DEFAULT_AI_PROVIDER 设置仍然有效
# - 如果分离式配置缺失，会自动使用默认提供商
# - 现有代码无需修改即可使用新功能